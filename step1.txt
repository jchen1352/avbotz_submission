	Pipes connect exactly two processes such that one process writes to it and the other reads from it. Shared memory creates a memory segment that two or more processes can connect to and communicate. Pipes are easier to use and are automatically synchronized, but are not too flexible. Shared memory allows more flexibility and saves resources, but needs manual synchronization and is harder to work with. I would choose pipes because we have an interface and different processes generally only need to communicate with just the interface, so shared memory is unnecessary.
